@using Hyl.Core.Domain.Survey
@using Hyl.Core.Helpers.Utility;
@using StackExchange.Profiling;
@model SurveyDirectory
@{
    ViewBag.Title = "Mobile";
    Layout = null;
    int pageNo = 1, isNextPage = 0;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@Utils.NoHTML(Utils.UrlDecode(Model.SurveyName))</title>
    <link href="/content/css/sur-mobile.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/content/js/plugs/jquery.mobile-1.4.5/jquery.mobile-1.4.5.min.css">
    <link href="/content/js/plugs/font-awesome-4.2.0/css/font-awesome.css" rel="stylesheet">
    <link href="/content/js/plugs/validate/jquery.validate.css" type="text/css" rel="stylesheet" />
    <link href="~/Content/css/surveyshow.mobile.css" rel="stylesheet" />
</head>
<body>
    @using (Html.BeginForm("Mobile", "Show", FormMethod.Post, new { id = "surveyForm", data_ajax = "false" }))
    {
        <input type="hidden" id="surveyId" name="surveyId" value="@Model.Id">
        <input type="hidden" name="form-from" value="mobile">
        <div data-role="page">
            <div data-role="header">
                <div id="dwSurveyTitle" class="noLogoImg" style="padding-top: 5px;">
                    <div id="dwSurveyName" class="dwSvyName" style="color:rgb(244, 234, 195);">@Html.Raw(Utils.HtmlDecode(Model.SurveyName))</div>
                </div>
                <div id="dwSurveyNote">
                    <div id="dwSurveyNoteEdit" style="color:white;font-weight: normal;line-height: 20px;">@Html.Raw(Utils.HtmlDecode(Model.SurveyDetail.SurveyNote))</div>
                </div>
            </div>
            <div id="m-errorMsg"></div>
            <div data-role="content">
                <div id="dwSurveyQuContent" style="">
                    <div id="dwSurveyQuContentBg">
                        <ul id="dwSurveyQuContentAppUl">
                            <!-- 题目内容 -->
                            @if (Model.Questions.Count > 0)
                            {
                                foreach (var question in Model.Questions)
                                {
                            <li class="li_surveyQuItemBody surveyQu_@pageNo" style="@(pageNo > 1 ? "display:none":"")">
                                @if (question.QuType == QuType.RADIO)
                                        {
                                            <!-- 单选题 -->
                                        @Html.Partial("QuestionTypeMobile/_Radio", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.CHECKBOX)
                                        {
                                            <!-- 多选题 -->
                                        @Html.Partial("QuestionTypeMobile/_Checkbox", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.FILLBLANK)
                                        {
                                            <!--填空题 -->
                                        @Html.Partial("QuestionTypeMobile/_Fillblank", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.SCORE)
                                        {
                                            <!-- 评分题 -->
                                        @Html.Partial("QuestionTypeMobile/_Score", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.ORDERQU)
                                        {
                                            <!-- 排序题 -->
                                        @Html.Partial("QuestionTypeMobile/_Orderqu", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.PAGETAG)
                                        {
                                            <!-- 分页题 -->
                                        @Html.Partial("QuestionTypeMobile/_Pagetag", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.PARAGRAPH)
                                        {
                                            <!--段落说明 -->
                                        @Html.Partial("QuestionTypeMobile/_Paragraph", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.MULTIFILLBLANK)
                                        {
                                            <!--多项填空题 -->
                                        @Html.Partial("QuestionTypeMobile/_Multifillblank", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.CHENRADIO)
                                        {
                                            <!-- 矩阵单选题 -->
                                        @Html.Partial("QuestionTypeMobile/_ChenRadio", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.CHENCHECKBOX)
                                        {
                                            <!--矩阵多选题 -->
                                        @Html.Partial("QuestionTypeMobile/_Chencheckbox", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.CHENSCORE)
                                        {
                                            <!-- 矩阵评分题 -->
                                        @Html.Partial("QuestionTypeMobile/_Chenscore", Model, new ViewDataDictionary { { "question", question } })
                                        }
                                        else if (question.QuType == QuType.CHENFBK)
                                        {
                                            <!-- 矩阵填空题 -->
                                        @Html.Partial("QuestionTypeMobile/_Chenfbk", Model, new ViewDataDictionary { { "question", question } })
                                        }
                            </li>
                                }
                            }

                            <li class="li_surveyQuItemBody surveyQu_@pageNo" style="@(pageNo > 1 ? "display:none":"")">
                                <div class="surveyQuItemBody">
                                    <div class="surveyQuItem">
                                        <!-- <div class="pageBorderTop nohover"  ></div> -->
                                        @*<div id="jcaptchaImgBody" class="r-qu-body" style="display: none;">

                                                <div class="frmItem" style="">
                                                    <label for="" class="frm_label">验证码</label>
                                                    <div class="frm_controls">
                                                        <span class="auth-code" id="verifycodeImgArea">
                                                            <input name="jcaptchaInput" type="text" class="" style="" autocomplete="off">
                                                            <img id="register-jcaptchaImg" onclick="refreshAutoCode('register-jcaptchaImg')" src="/content/jcaptcha.action" alt="验证码" height="40">
                                                        </span>
                                                        <a href="javascript:refreshAutoCode('register-jcaptchaImg');" style="margin-left: 5px;" hidefocus="true">换一张</a>
                                                        <span class="frm_desc">验证码，区分大小写</span>
                                                        <p class="valid-msg fail" style="display: none;"><i>●</i><span class="msg_content">验证码错误，请重新输入</span></p>
                                                    </div>
                                                </div>
                                                <div class="errorItem" style="display: none;"><label for="" class="error">验证码错误，请重新输入！</label></div>
                                            </div>*@

                                        <input type="hidden" class="quType" value="submitSurveyBtn">
                                        <div class="surveyQuItemContent" style="margin-bottom: 0px;min-height:20px;">
                                            <input type="button" class="submitSurvey" id="submitSurvey" value="提&nbsp;交" data-role="button" data-theme="b" />

                                            @*@if (pageNo > 1)
                                                    {
                                                    <a href="#" class="sbtn24 sbtn24_1 prevPage_a">上一页</a>
                                                    <input type="hidden" name="prevPageNo" value="@(--pageNo)">
                                                    }
                                                @(pageNo = pageNo + 1)
                                                <input type="hidden" name="nextPageNo" value="@(pageNo)">*@
                                        </div>
                                    </div>
                                </div>
                            </li>

                        </ul>
                    </div>
                </div>
            </div>
            @*<div data-role="footer">
                    <h3>深圳市泓源林计算机软件有限公司版权所有</h3>
                </div>*@
        </div>
    }

    <div id="fixedMsg" style="position: fixed;top: 0px;width: 100%;padding: 10px;text-align: center;font-size: 18px;letter-spacing: 4px;line-height: 56px;background-color: #111;background-color: rgba(17,17,17,0.5);color: #fff;color: rgba(255,255,255,0.5);z-index: 200;display: none;"></div>

    <script type="text/javascript" src="/content/js/plugs/jquery-ui-1.10.3.custom/js/jquery-1.10.1.js"></script>
    <script src="/content/js/plugs/jquery.mobile-1.4.5/jquery.mobile-1.4.5.min.js"></script>
    <script src="~/Content/js/plugs/jquery.nicescroll/jquery.nicescroll.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("body").niceScroll();
            //分页设置 nextPage_a prevPage_a
            $(".nextPage_a").click(function () {
                var thParent = $(this).parent();
                var nextPageNo = thParent.find("input[name='nextPageNo']").val();
                $(".li_surveyQuItemBody").hide();
                $(".surveyQu_" + nextPageNo).fadeIn("slow");
                //$(window).scrollTop(10);
                $("html,body").animate({ scrollTop: 10 }, 500);
                return false;
            });
            $(".prevPage_a").click(function () {
                var thParent = $(this).parent();
                var prevPageNo = thParent.find("input[name='prevPageNo']").val();
                $(".li_surveyQuItemBody").hide();
                $(".surveyQu_" + prevPageNo).fadeIn("slow");
                $(window).scrollTop(10);
                return false;
            });

            /**排序题*/
            $(".m_clickQuOrderItem").click(function () {
                var visibleOrderbyNum = $(this).parents().find(".m_orderby_num:visible");
                var thOrderbyNum = $(this).find(".m_orderby_num");
                if ($(this).find(".m_orderby_num:visible")[0]) {

                } else {

                    var thNum = 0;
                    $(this).append("<select class='m_orderby_sel' > </select>");
                    var mOrderbySel = $(this).find(".m_orderby_sel");
                    var quOrderItems = $(this).parents().find(".m_clickQuOrderItem");
                    $.each(quOrderItems, function (i, item) {
                        mOrderbySel.append("<option value='" + (i + 1) + "'>移至排序" + (i + 1) + "</option>");
                        var targetHid = $(this).parents(".ui-controlgroup-controls ").find(".quOrderItemHidInput[value='" + (i + 1) + "']");
                        if (!targetHid[0] && thNum === 0) {
                            thNum = (i + 1);
                        }
                    });

                    thOrderbyNum.text(thNum);
                    thOrderbyNum.show();
                    mOrderbySel.val(thNum)
                    $(this).find(".quOrderItemHidInput").val(thNum);
                }
                bindEvent();

                runlogic($(this));
                validateCheck($(this).parents(".li_surveyQuItemBody"), false);
                return false;
            });
            function bindEvent() {
                $(".m_orderby_sel").unbind();
                $(".m_orderby_sel").change(function () {
                    //交换个排
                    var thOrderbyItem = $(this).parents(".m_clickQuOrderItem");
                    var thOrderByNum = thOrderbyItem.find(".quOrderItemHidInput").val();
                    var thChangeNum = $(this).val();
                    var targetHid = $(this).parents(".ui-controlgroup-controls ").find(".quOrderItemHidInput[value='" + thChangeNum + "']");
                    if (targetHid[0]) {
                        var targetOrderbyItem = targetHid.parents(".m_clickQuOrderItem");
                        targetOrderbyItem.find(".m_orderby_num").text(thOrderByNum);
                        targetOrderbyItem.find(".quOrderItemHidInput").val(thOrderByNum);
                        targetOrderbyItem.find(".m_orderby_sel").val(thOrderByNum);
                    }

                    thOrderbyItem.find(".m_orderby_num").text(thChangeNum);
                    thOrderbyItem.find(".quOrderItemHidInput").val(thChangeNum);
                    thOrderbyItem.find(".m_orderby_sel").val(thChangeNum);

                });
            }


            /**评分题*/
            $(".starRating  .fa").hover(function () {
                var prevAll = $(this).prevAll();
                prevAll.removeClass("fa-star-o");
                prevAll.addClass("fa-star");
                $(this).removeClass("fa-star-o");
                $(this).addClass("fa-star");
            }, function () {
                var scoreRow = $(this).parents(".scoreRow");
                var starNum = scoreRow.find(".scoreNumInput").val();
                if (starNum == "" && starNum <= 0) {
                    var thParent = $(this).parent();
                    var fas = thParent.find(".fa");
                    fas.removeClass("fa-star");
                    fas.addClass("fa-star-o");
                }
            });

            $(".starRating  .fa").click(function () {
                var thParent = $(this).parent();
                var fas = thParent.find(".fa");
                fas.removeClass("fa-star");
                fas.addClass("fa-star-o");

                var prevAll = $(this).prevAll();
                prevAll.removeClass("fa-star-o");
                prevAll.addClass("fa-star");
                $(this).removeClass("fa-star-o");
                $(this).addClass("fa-star");

                var scoreRow = $(this).parents(".scoreRow");
                var starNum = 0;
                if (prevAll[0]) {
                    starNum = prevAll.size();
                }
                scoreRow.find(".scoreNumInput").val(starNum + 1);

                runlogic($(this));

                validateCheck($(this).parents(".li_surveyQuItemBody"), false);
                return false;
            });



            //表单验证
            /**初始化表单骓证配置**/
            function validateForms() {
                var result = true;
                var surveyQuItemBodys = $(".li_surveyQuItemBody");
                var firstError = null;
                $.each(surveyQuItemBodys, function () {
                    var quItemBody = $(this);
                    if (!validateCheck(quItemBody, true)) {
                        //定位到这题
                        if (firstError == null) {
                            firstError = quItemBody;
                        }
                        result = false;
                    }
                });
                if (firstError != null) {
                    $(window).scrollTop(firstError.offset().top);
                }

                if ($("#jcaptchaImgBody").is(":visible")) {
                    var jcaptchaInput = $("input[name='jcaptchaInput']").val();
                    if (jcaptchaInput === "") {
                        $("#jcaptchaImgBody .errorItem").show();
                        result = false;
                    } else {
                        $("#jcaptchaImgBody .errorItem").hide();
                    }
                }
                return result;
            }


            function validateCheck(quItemBody, isSubForm) {
                if (quItemBody.is(":visible")) {
                    var quType = quItemBody.find(".quType").val();
                    var isRequired = quItemBody.find(".isRequired").val();

                    var validateStatus = false;

                    if (isRequired === "0") {
                        validateStatus = true;
                        return true;
                    }

                    if (quType === "RADIO") {
                        validateStatus = quItemBody.find("input[type='radio']:checked")[0];

                    } else if (quType === "CHECKBOX") {
                        validateStatus = quItemBody.find("input[type='checkbox']:checked")[0];

                    } else if (quType === "FILLBLANK") {
                        validateStatus = quItemBody.find(".fillblankInput").val() != "";

                    } else if (quType === "ORDERQU") {
                        validateStatus = !quItemBody.find(".quOrderItemHidInput[value=0]")[0];

                    } else if (quType === "SCORE") {
                        validateStatus = true;
                        var quScoreOptionTrs = quItemBody.find(".quScoreOptionTr");
                        $.each(quScoreOptionTrs, function () {
                            var scoreNumInput = $(this).find(".scoreNumInput");
                            if (scoreNumInput.val() === "") {
                                validateStatus = false;
                                return false;
                            }
                        });

                    } else if (quType === "MULTIFILLBLANK") {

                        validateStatus = true;
                        var quScoreOptionTrs = quItemBody.find(".mFillblankTableTr");
                        $.each(quScoreOptionTrs, function () {
                            var scoreNumInput = $(this).find(".dwMFillblankInput");
                            if (scoreNumInput.val() === "") {
                                validateStatus = false;
                                return false;
                            }
                        });

                    } else if (quType === "CHENRADIO") {
                        validateStatus = true;
                        var quScoreOptionTrs = quItemBody.find(".dwQuCoChenRowTr");
                        $.each(quScoreOptionTrs, function () {
                            var tempInputs = $(this).find("input[type='radio']:checked");
                            if (!tempInputs[0]) {
                                validateStatus = false;
                                return false;
                            }
                        });
                    } else if (quType === "CHENCHECKBOX") {
                        validateStatus = true;
                        var quScoreOptionTrs = quItemBody.find(".dwQuCoChenRowTr");
                        $.each(quScoreOptionTrs, function () {
                            var tempInputs = $(this).find("input[type='checkbox']:checked");
                            if (!tempInputs[0]) {
                                validateStatus = false;
                                return false;
                            }
                        });
                    } else if (quType === "CHENSCORE") {
                        validateStatus = !(quItemBody.find(".scoreNumInput[value=0]")[0]);
                    } else if (quType === "CHENFBK") {
                        var dwCMFBKs = quItemBody.find(".dwChenMFillblankInput");
                        validateStatus = true;
                        $.each(dwCMFBKs, function () {
                            var tempInputs = $(this);
                            if (tempInputs.val() === "") {
                                validateStatus = false;
                                return false;
                            }
                        });
                    } else if (quType === "submitSurveyBtn" || quType === "PARAGRAPH" || quType === "PAGETAG") {
                        return true;
                    }
                }
                else {
                    validateStatus = true;
                }

                if (validateStatus) {
                    quItemBody.find(".errorItem").remove();
                } else {
                    if (isSubForm && !quItemBody.find(".errorItem")[0]) {
                        var errorHtml = "<div class=\"errorItem\"><label for=\"\" class=\"error\">请检查题目答案，为必答项！</label></div>";
                        quItemBody.find(".surveyQuItemContent").append(errorHtml);
                    }
                }
                return validateStatus;
            }

            function PrepareData() {
                var surveyId = $("#surveyId").val();
                postData = new Object();
                postData.DirId = surveyId;
                //postData.AnAnswer = [];
                postData.AnswerRadio = [];
                postData.AnswerCheckbox = [];
                postData.AnswerFillblank = [];
                postData.AnswerOrder = [];
                postData.AnswerScore = [];
                //postData.AnswerYesno = [];
                postData.AnswerMultiFillblank = [];
                postData.AnswerChenRadio = [];
                postData.AnswerChenCheckbox = [];
                //postData.AnswerCompChenRadio = [];
                postData.AnswerChenScore = [];
                postData.AnswerChenFillblank = [];

                var surveyQuItemBodys = $(".li_surveyQuItemBody");
                $.each(surveyQuItemBodys, function (index, item) {
                    var quItemBody = $(item);
                    var quId = quItemBody.find(".quId").val();
                    var quType = quItemBody.find(".quType").val();

                    if (quType === "RADIO") {
                        var index = postData.AnswerRadio.length;
                        postData.AnswerRadio[index] = new Object();
                        postData.AnswerRadio[index].DirId = surveyId;
                        postData.AnswerRadio[index].QuId = quId;
                        postData.AnswerRadio[index].QuItemId = $(quItemBody.find("input[type='radio']:checked")[0]).val();

                    } else if (quType === "CHECKBOX") {
                        $.each(quItemBody.find("input[type='checkbox']:checked"), function (i, t) {
                            var index = postData.AnswerCheckbox.length;
                            postData.AnswerCheckbox[index] = new Object();
                            postData.AnswerCheckbox[index].DirId = surveyId;
                            postData.AnswerCheckbox[index].QuId = quId;
                            postData.AnswerCheckbox[index].QuItemId = $(t).val();
                        });
                    } else if (quType === "FILLBLANK") {
                        var index = postData.AnswerFillblank.length;
                        postData.AnswerFillblank[index] = new Object();
                        postData.AnswerFillblank[index].DirId = surveyId;
                        postData.AnswerFillblank[index].QuId = quId;
                        postData.AnswerFillblank[index].Answers = quItemBody.find(".fillblankInput").val();

                    } else if (quType === "ORDERQU") {
                        $.each(quItemBody.find(".m_clickQuOrderItem"), function (i, t) {
                            var index = postData.AnswerOrder.length;
                            postData.AnswerOrder[index] = new Object();
                            postData.AnswerOrder[index].DirId = surveyId;
                            postData.AnswerOrder[index].QuId = quId;
                            postData.AnswerOrder[index].QuRowId = $(this).find(".optionId").val();
                            postData.AnswerOrder[index].OrderyNum = $(this).find(".m_orderby_num").text();
                        });
                    } else if (quType === "SCORE") {
                        var quScoreOptionTrs = quItemBody.find(".quScoreOptionTr");
                        $.each(quScoreOptionTrs, function () {
                            var index = postData.AnswerScore.length;
                            postData.AnswerScore[index] = new Object();
                            postData.AnswerScore[index].DirId = surveyId;
                            postData.AnswerScore[index].QuId = quId;
                            postData.AnswerScore[index].QuRowId = $(this).find(".dwScoreOptionId").val();
                            postData.AnswerScore[index].AnswserScore = $(this).find(".scoreNumInput").val();
                        });

                    } else if (quType === "MULTIFILLBLANK") {
                        var quScoreOptionTrs = quItemBody.find(".mFillblankTableTr");
                        $.each(quScoreOptionTrs, function () {
                            var index = postData.AnswerMultiFillblank.length;
                            postData.AnswerMultiFillblank[index] = new Object();
                            postData.AnswerMultiFillblank[index].DirId = surveyId;
                            postData.AnswerMultiFillblank[index].QuId = quId;
                            postData.AnswerMultiFillblank[index].QuItemId = $(this).find(".dwMFillblankOptionId").val();
                            postData.AnswerMultiFillblank[index].Answers = $(this).find(".dwMFillblankInput").val();
                        });

                    } else if (quType === "CHENRADIO") {
                        var quScoreOptionTrs = quItemBody.find(".dwQuCoChenRowTr");
                        $.each(quScoreOptionTrs, function () {
                            var index = postData.AnswerChenRadio.length;
                            postData.AnswerChenRadio[index] = new Object();
                            postData.AnswerChenRadio[index].DirId = surveyId;
                            postData.AnswerChenRadio[index].QuId = quId;
                            postData.AnswerChenRadio[index].QuRowId = $(this).find(".quchenrowid").val();
                            postData.AnswerChenRadio[index].QuColId = $(this).find("input[type='radio']:checked").val();

                        });
                    } else if (quType === "CHENCHECKBOX") {
                        var quScoreOptionTrs = quItemBody.find(".dwQuOptionItemContent");
                        $.each(quScoreOptionTrs, function () {
                            if ($(this).find("input[type='checkbox']:checked").length > 0) {
                                var index = postData.AnswerChenCheckbox.length;
                                postData.AnswerChenCheckbox[index] = new Object();
                                postData.AnswerChenCheckbox[index].DirId = surveyId;
                                postData.AnswerChenCheckbox[index].QuId = quId;
                                postData.AnswerChenCheckbox[index].QuRowId = $(this).find(".quchenrowid").val();
                                postData.AnswerChenCheckbox[index].QuColId = $(this).find("input[type='checkbox']:checked").val();
                            }
                        });
                    } else if (quType === "CHENSCORE") {
                        var quChenScores = quItemBody.find(".scoreRow");
                        $.each(quChenScores, function () {
                            var index = postData.AnswerChenScore.length;
                            postData.AnswerChenScore[index] = new Object();
                            postData.AnswerChenScore[index].DirId = surveyId;
                            postData.AnswerChenScore[index].QuId = quId;
                            postData.AnswerChenScore[index].QuRowId = $(this).find(".quchenrowid").val();
                            postData.AnswerChenScore[index].QuColId = $(this).find(".quchencolid").val();
                            postData.AnswerChenScore[index].AnswserScore = $(this).find(".scoreNumInput").val();
                        });
                    }
                    else if (quType === "CHENFBK") {
                        var dwCMFBKs = quItemBody.find(".dwQuChenFbkOptionItemContent");
                        $.each(dwCMFBKs, function () {
                            var index = postData.AnswerChenFillblank.length;
                            postData.AnswerChenFillblank[index] = new Object();
                            postData.AnswerChenFillblank[index].DirId = surveyId;
                            postData.AnswerChenFillblank[index].QuId = quId;
                            postData.AnswerChenFillblank[index].QuRowId = $(this).find(".quchenrowid").val();
                            postData.AnswerChenFillblank[index].QuColId = $(this).find(".quchencolid").val();
                            postData.AnswerChenFillblank[index].AnswerValue = $(this).find(".dwChenMFillblankInput").val();
                        });
                    }
                    else if (quType === "submitSurveyBtn" || quType === "PARAGRAPH" || quType === "PAGETAG") {
                        return true;
                    }
                });
            }

            var postData = new Object();
            $(".submitSurvey").click(function () {
                $(this).prop("disabled", true);
                if (validateForms()) {
                    PrepareData();
                    console.log(postData);
                    $.post('@Url.Action("Mobile", "Show")', {"model":postData}, function(data) {
                        location.href = '@Url.Action("Result", "Show")?SurveyName=@Utils.NoHTML(Utils.HtmlDecode(Model.SurveyName))&AnswerId=' + data;
                    });
                }
                $(this).prop("disabled", false);
                return false;
            });

            //绑定操作事件
            $("#dwSurveyQuContent input[type='radio'],#dwSurveyQuContent input[type='checkbox']").change(function () {
                runlogic($(this));
                validateCheck($(this).parents(".li_surveyQuItemBody"), false);
            });

            //填空题
            $(".fillblankInput,.dwMFillblankInput,.dwChenMFillblankInput").blur(function () {
                //$(this).css("borderColor","#D6D6FF");
                runlogic($(this));
                validateCheck($(this).parents(".li_surveyQuItemBody"), false);
            });


            function resetQuNum() {
                var quTitleNums = $(".quTitleNum");
                $.each(quTitleNums, function (i, item) {
                    $(this).text((i + 1) + "、");
                });
            }

            resetQuNum();

            //处理标题因有p标签影响题目序号换行的问题
            var quTitleNums = $(".quTitleNum");
            $.each(quTitleNums, function () {
                var nextObj = $(this).next();
                if (nextObj[0]) {
                    var childrens = nextObj.children();
                    if (childrens[0]) {
                        var firstChildren = childrens.first();
                        if (firstChildren.is("p")) {
                            $(this).prependTo(firstChildren);
                        }
                    }
                }
            });


        });




        /******************************处理题目逻辑设置 **************************************/
        //处理题目逻辑设置


        /** 答题触发事件 **/

        //初始化 处理默认逻辑跳转为显示，则先隐藏元素
        var quLogics = $("#dwSurveyQuContent .quLogicItem");
        $.each(quLogics, function () {
            var loginItem = $(this);
            var cgQuItemId = loginItem.find(".cgQuItemId").val();
            var skQuId = loginItem.find(".skQuId").val();
            var logicId = loginItem.find(".logicId").val();
            var logicType = loginItem.find(".logicType").val();

            if (logicType === "2") {
                //逻辑类型为“显示”2  则初始化为隐藏
                var hidQuItemBody = $(".quId[value='" + skQuId + "']").parents(".li_surveyQuItemBody");
                hidQuItemBody.hide();
                hidQuItemBody.addClass("hidFor" + logicId);
                hidQuItemBody.find(".answerTag").attr("disabled", true);
            }
        });

        function runlogic(thFormElementObj) {
            //thFormElementObj 当前关联的form表单元素
            var quItemBody = thFormElementObj.parents(".li_surveyQuItemBody");

            var quLogicItems = quItemBody.find(".quLogicItem");

            if (quLogicItems[0]) {

                var quInputCase = quItemBody.find(".quInputCase");
                var quId = quInputCase.find(".quId").val();
                var quType = quInputCase.find(".quType").val();

                //$("input[name='qu_"+quType+"_"+quId+"']").change(function(){});

                if (quType === "RADIO" || quType === "CHECKBOX" || quType === "SCORE" || quType === "MULTIFILLBLANK" || quType === "CHENRADIO" || quType === "CHENCHECKBOX" || quType === "CHENSCORE" || quType === "CHENFBK") {


                    //判断是否选中
                    var quLgoicItem = null;
                    //var thVal=thFormElementObj.val();

                    //遍历每个逻辑设置
                    var quOptionItems = null;
                    if (quType === "RADIO" || quType === "CHECKBOX") {
                        quOptionItems = quItemBody.find(".dwQuOptionItemContent");
                        //thVal=thFormElementObj.val();
                    } else if (quType === "SCORE") {
                        quOptionItems = quItemBody.find(".quScoreOptionTr");
                        //thVal=thFormElementObj.text();
                    } else if (quType === "MULTIFILLBLANK") {
                        quOptionItems = quItemBody.find(".mFillblankTableTr");
                    } else if (quType === "CHENRADIO" || quType === "CHENCHECKBOX") {
                        quOptionItems = quItemBody.find(".dwQuOptionItemContent");
                    } else if (quType === "CHENFBK") {
                        quOptionItems = quItemBody.find(".dwQuChenFbkOptionItemContent");
                    }

                    $.each(quLogicItems, function () {
                        var loginItem = $(this);
                        var cgQuItemId = loginItem.find(".cgQuItemId").val();
                        var skQuId = loginItem.find(".skQuId").val();
                        var logicId = loginItem.find(".logicId").val();
                        var logicType = loginItem.find(".logicType").val();

                        var geLe = null;
                        var scoreNum = null;
                        if (quType === "SCORE") {
                            geLe = loginItem.find(".geLe").val();
                            scoreNum = loginItem.find(".scoreNum").val();
                        }

                        //过滤优先级
                        var isbreak = false;
                        $.each(quOptionItems, function () {
                            var quCoItem = $(this);

                            var quInput = null;
                            var logicStatus = false;
                            var curQuItemId = null;
                            if (quType === "RADIO") {
                                quInput = quCoItem.find("input[type='radio']");
                                logicStatus = quInput.prop("checked");
                                curQuItemId = quInput.val();
                            } else if (quType === "CHECKBOX") {
                                quInput = quCoItem.find("input[type='checkbox']");
                                logicStatus = quInput.prop("checked");
                                curQuItemId = quInput.val();
                            } else if (quType === "SCORE") {
                                quInput = quCoItem.find(".dwScoreOptionId");
                                var curScore = quCoItem.find(".scoreNumInput").val();
                                if (curScore != "") {
                                    logicStatus = (geLe === "le" && curScore <= scoreNum) || (geLe === "ge" && curScore >= scoreNum);
                                }
                                curQuItemId = quInput.val();
                            } else if (quType === "MULTIFILLBLANK") {
                                quInput = quCoItem.find(".dwMFillblankOptionId");
                                logicStatus = quCoItem.find(".dwMFillblankInput").val() != "";
                                curQuItemId = quInput.val();
                            } else if (quType === "CHENRADIO") {
                                quInput = quCoItem.find("input[type='radio']");
                                logicStatus = quInput.prop("checked");
                                curQuItemId = quCoItem.find(".dwChenInputTemp").val();
                            } else if (quType === "CHENCHECKBOX") {
                                quInput = quCoItem.find("input[type='checkbox']");
                                logicStatus = quInput.prop("checked");
                                curQuItemId = quCoItem.find(".dwChenInputTemp").val();
                            } else if (quType === "CHENFBK") {
                                quInput = quCoItem.find(".dwChenMFillblankInput");
                                logicStatus = quInput.val() != "";
                                curQuItemId = quCoItem.find(".dwChenInputTemp").val();
                            }

                            if (curQuItemId === cgQuItemId) {

                                if (logicType === "1") {
                                    //跳转
                                    if (logicStatus) {
                                        //逻辑选项被选中状态，激活状态
                                        skQuestion(quItemBody.next(), skQuId, logicId, function () {
                                            //重新编题号

                                        });
                                        if (skQuId === "1" || skQuId === "2") {
                                            isbreak = true;
                                        }
                                    } else {
                                        /*
                                        //逻辑选项未被选中状态，未激活
                                        //$(".hidFor"+loginId).slideDown("slow");
                                        $(".hidFor"+loginId).show();
                                        //$(".hidFor"+loginId).fadeIn();
                                        $(".hidFor"+loginId).removeClass("hidFor"+loginId);
                                        //回答标记与逻辑设置没有关系
                                        $(".hidFor"+loginId).find(".answerTag").attr("disabled",false);
                                        */
                                        var hidQuItemBodys = $(".hidFor" + logicId);
                                        $(".hidFor" + logicId).removeClass("hidFor" + logicId);
                                        $.each(hidQuItemBodys, function () {
                                            var thQuItemBodyClass = $(this).attr("class");
                                            if (thQuItemBodyClass.indexOf("hidFor") < 0) {
                                                $(this).show();
                                                //$(".hidFor"+loginId).fadeIn();
                                                //回答标记与逻辑设置没有关系
                                                $(this).find(".answerTag").attr("disabled", false);
                                            }
                                        });
                                    }
                                } else {
                                    //逻辑类型为“显示” quType=2
                                    if (logicStatus) {
                                        //逻辑选项被选中状态，激活状态  显示题

                                        var hidQuItemBodys = $(".hidFor" + logicId);
                                        $(".hidFor" + logicId).removeClass("hidFor" + logicId);
                                        $.each(hidQuItemBodys, function () {
                                            var thQuItemBodyClass = $(this).attr("class");
                                            if (thQuItemBodyClass.indexOf("hidFor") < 0) {
                                                $(this).show();
                                                $(this).find(".answerTag").attr("disabled", false);
                                            }
                                        });

                                    } else {
                                        /*  隐藏题
                                        */
                                        var hidQuItemBody = $(".quId[value='" + skQuId + "']").parents(".li_surveyQuItemBody");
                                        hidQuItemBody.hide();
                                        hidQuItemBody.addClass("hidFor" + logicId);
                                        hidQuItemBody.find(".answerTag").attr("disabled", true);

                                    }
                                }

                                return false;
                            }
                        });

                        if (isbreak) {
                            return false;
                        }

                    });

                } else if (quType === "FILLBLANK") {


                    //遍历每个逻辑设置
                    var quOptionItems = quItemBody.find(".dwQuOptionItemContent");
                    var thVal = thFormElementObj.val();

                    $.each(quLogicItems, function () {
                        var loginItem = $(this);
                        var cgQuItemId = loginItem.find(".cgQuItemId").val();
                        var skQuId = loginItem.find(".skQuId").val();
                        var logicId = loginItem.find(".logicId").val();
                        var logicType = loginItem.find(".logicType").val();
                        if (logicType === "1") {
                            //跳转
                            if (thVal != "") {
                                //逻辑选项被选中状态，激活状态
                                skQuestion(quItemBody.next(), skQuId, logicId, function () {
                                    //重新编题号

                                });
                                if (skQuId === "1" || skQuId === "2") {
                                    isbreak = true;
                                }
                            } else {
                                //逻辑选项未被选中状态，未激活
                                //$(".hidFor"+loginId).slideDown("slow");

                                var hidQuItemBodys = $(".hidFor" + logicId);
                                $(".hidFor" + logicId).removeClass("hidFor" + logicId);

                                $.each(hidQuItemBodys, function () {
                                    var thQuItemBodyClass = $(this).attr("class");
                                    if (thQuItemBodyClass.indexOf("hidFor") < 0) {
                                        $(this).show();
                                        //$(".hidFor"+loginId).fadeIn();
                                        //回答标记与逻辑设置没有关系
                                        $(this).find(".answerTag").attr("disabled", false);
                                    }
                                });
                            }
                        } else {
                            //显示
                            //逻辑类型为“显示” quType=1
                            if (thVal != "") {
                                //逻辑选项被选中状态，激活状态  显示题
                                var hidQuItemBodys = $(".hidFor" + logicId);
                                $(".hidFor" + logicId).removeClass("hidFor" + logicId);
                                $.each(hidQuItemBodys, function () {
                                    var thQuItemBodyClass = $(this).attr("class");
                                    if (thQuItemBodyClass.indexOf("hidFor") < 0) {
                                        $(this).show();
                                        $(this).find(".answerTag").attr("disabled", false);
                                    }
                                });

                            } else {
                                /*  隐藏题
                                */
                                var hidQuItemBody = $(".quId[value='" + skQuId + "']").parents(".li_surveyQuItemBody");
                                hidQuItemBody.hide();
                                hidQuItemBody.addClass("hidFor" + logicId);
                                hidQuItemBody.find(".answerTag").attr("disabled", true);
                            }
                        }

                    });

                }
            }


        }



        function skQuestion(nextQuItemBody, skQuId, logicId, callback) {

            if (nextQuItemBody[0]) {
                //submitSurveyBtn
                var nextQuType = nextQuItemBody.find(".quType").val();
                var nextQuId = nextQuItemBody.find(".quId").val();
                var nextAnswerTag = nextQuItemBody.find(".answerTag");

                //var quType=quItemBody.find(".quType").val();
                //var quId=quItemBody.find(".quId").val();

                //判断跳转类型
                if (skQuId == null) {
                    //对于逻辑选项未被选中的情况

                } else if (nextQuItemBody.is(":hidden")) {
                    skQuestion(nextQuItemBody.next(), skQuId, logicId, function () {

                    });
                } else if (nextQuType != "submitSurveyBtn" && nextQuType != "PAGETAG" && (skQuId === "1" || skQuId === "2" || nextQuId != skQuId)) {
                    //对于逻辑项是被选定的情况下
                    nextAnswerTag.attr("disabled", true);
                    //nextQuItemBody.slideUp("slow");
                    nextQuItemBody.hide();
                    //nextQuItemBody.fadeOut();
                    nextQuItemBody.addClass("hidFor" + logicId);

                    skQuestion(nextQuItemBody.next(), skQuId, logicId, function () {

                    });
                }
            } else {
                callback();
            }
        }


        /******************************处理题目逻辑设置结束 **************************************/


        function refreshAutoCode(codeImgId) {
            $("#" + codeImgId).attr("src", "${ctx}/jcaptcha.action");
        }

        ////判则判断
        //var url = "${ctx}/response!ajaxCheckSurvey.action";
        //var data = "surveyId=${survey.id}";
        //$.ajax({
        //    url: url,
        //    data: data,
        //    type: "post",
        //    success: function (msg) {
        //        var json = eval("(" + msg + ")");
        //        if (json.isCheckCode === "3") {
        //            $("#jcaptchaImgBody").show();
        //        }

        //        if (json.surveyStatus != "0") {
        //            $("#fixedMsg").show();
        //            $("#fixedMsg").html("您已经回答过此问卷！");
        //            $("#submitSurvey").remove();
        //            $("form").attr("action", "#");
        //        }
        //    }
        //});

        var errorcode = "${param['errorcode']}";
        if (errorcode == "3") {
            var errorHtml = "<div class=\"errorItem\" style=\"padding-left:30px;padding-top:10px;\" ><label for=\"\" class=\"error\">验证码不正确，请重新回答！</label></div>";
            $("#m-errorMsg").append(errorHtml);
        }

    </script>

    @MiniProfiler.RenderIncludes()
</body>
</html>
