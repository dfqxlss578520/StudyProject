@using Hyl.Core.Domain.Survey
@using Hyl.Core.Helpers.Utility;
@using StackExchange.Profiling;
@model SurveyDirectory
@{
    ViewBag.Title = "PC";
    Layout = null;
    int pageNo = 1, isNextPage = 0;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>@Utils.NoHTML(Utils.UrlDecode(Model.SurveyName))</title>
    <link href="/content/css/preview-dev.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/content/js/plugs/colpick-jQuery/css/colpick.css" type="text/css" />
    <link href="/content/js/plugs/validate/jquery.validate.css" type="text/css" rel="stylesheet" />
    <link href="/content/js/plugs/jquery-ui-1.10.3.custom/css/mycss/jquery-ui-1.10.3.custom.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/surveyshow.css" rel="stylesheet" />
</head>
<body>
    <div id="wrap">
        <input type="hidden" id="id" name="id" value="@Model.Id">
        <input type="hidden" id="ctx" name="ctx" value="/content">
        <input type="hidden" id="surveyStyleId" value="@Model.SurveyStyle.Id">
        <input type="hidden" id="prevHost" value="/content">

        <form id="surveyForm">
            <input type="hidden" id="surveyId" name="surveyId" value="@Model.Id">
            <input type="hidden" id="sid" name="sid" value="@Model.Sid">
            <div id="dw_body" style="padding-top:10px;">
                <div id="dw_body_content">
                    <div id="dwSurveyHeader">
                        <div id="dwSurveyLogo"><img src="/content/images/logo/sample_logo.png" height="70" /> </div>
                        <div id="dwSurveyTitle" class="noLogoImg">
                            <div id="dwSurveyName" class="editAble dwSvyName">@Html.Raw(Utils.HtmlDecode(Model.SurveyName))</div>
                        </div>
                        <div id="dwSurveyNote">
                            <div id="dwSurveyNoteEdit" class="editAble">@Html.Raw(Utils.HtmlDecode(Model.SurveyDetail.SurveyNote))</div>
                        </div>
                    </div>
                    <div id="dwSurveyQuContent" style="min-height: 300px;">
                        <div id="dwSurveyQuContentBg">
                            <c:set var="pageNo" value="1"></c:set>
                            <c:set var="isNextPage" value="0"></c:set>
                            <ul id="dwSurveyQuContentAppUl">
                                <!-- 题目内容 -->
                                @if (Model.Questions != null && Model.Questions.Count > 0)
                                {
                                    foreach (var question in Model.Questions)
                                    {
                                        <li class="li_surveyQuItemBody surveyQu_@pageNo" style="@(pageNo > 1 ? " display:none" : "")">
                                            @if (question.QuType == QuType.RADIO)
                                            {
                                                <!-- 单选题 -->
                                                @Html.Partial("QuestionType/_Radio", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.CHECKBOX)
                                            {
                                                <!-- 多选题 -->
                                                @Html.Partial("QuestionType/_Checkbox", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.FILLBLANK)
                                            {
                                                <!-- 填空题 -->
                                                @Html.Partial("QuestionType/_Fillblank", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.SCORE)
                                            {
                                                <!-- 评分题 -->
                                                @Html.Partial("QuestionType/_Score", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.ORDERQU)
                                            {
                                                <!-- 排序题 -->
                                                @Html.Partial("QuestionType/_Orderqu", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.PAGETAG)
                                            {
                                                <!-- 分页题 -->
                                                @Html.Partial("QuestionType/_Pagetag", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.PARAGRAPH)
                                            {
                                                <!--段落说明 -->
                                                @Html.Partial("QuestionType/_Paragraph", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.MULTIFILLBLANK)
                                            {
                                                <!--多项填空题 -->
                                                @Html.Partial("QuestionType/_Multifillblank", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.CHENRADIO)
                                            {
                                                <!-- 矩阵单选题 -->
                                                @Html.Partial("QuestionType/_ChenRadio", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.CHENCHECKBOX)
                                            {
                                                <!--矩阵多选题 -->
                                                @Html.Partial("QuestionType/_Chencheckbox", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.CHENFBK)
                                            {
                                                <!-- 矩阵填空题 -->
                                                @Html.Partial("QuestionType/_Chenfbk", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                            else if (question.QuType == QuType.CHENSCORE)
                                            {
                                                <!-- 矩阵评分题 -->
                                                @Html.Partial("QuestionType/_Chenscore", Model, new ViewDataDictionary { { "question", question } })
                                            }
                                        </li>
                                    }
                                }
                                <li class="li_surveyQuItemBody surveyQu_@pageNo" style="@(pageNo > 1 ? " display:none" : "")">
                                    <div class="surveyQuItemBody">
                                        <div class="surveyQuItem">
                                            <div id="jcaptchaImgBody" class="r-qu-body" style="display: none;">

                                                <div class="frmItem" style="">
                                                    <label for="" class="frm_label">验证码</label>
                                                    <div class="frm_controls">
                                                        <span class="auth-code" id="verifycodeImgArea">
                                                            <input name="jcaptchaInput" type="text" class="" style="width:100px;" autocomplete="off">
                                                            @*<img id="register-jcaptchaImg" onclick="refreshAutoCode('register-jcaptchaImg')" src="/content/jcaptcha.action" alt="验证码" height="40">*@
                                                        </span>
                                                        <a href="javascript:refreshAutoCode('register-jcaptchaImg');" style="margin-left: 5px;" hidefocus="true">换一张</a>
                                                        <span class="frm_desc">输入下面图片的字符，区分大小写</span>
                                                        <p class="valid-msg fail" style="display: none;"><i>●</i><span class="msg_content">验证码错误，请重新输入</span></p>
                                                    </div>
                                                </div>
                                                <div class="errorItem" style="display: none;"><label for="" class="error">验证码错误，请重新输入！</label></div>
                                                <!-- 验证码：<input type="text" size="8" name="jcaptchaInput">
                                                    &nbsp;<img id="jcaptchaImg" alt="点击刷新" src="/content/jcaptcha.action" align="top">
                                                    &nbsp;点击图片刷新 --!>
                                                </div>
                                                <input type="hidden" class="quType" value="submitSurveyBtn">
                                                <div class="surveyQuItemContent" style="padding-top: 12px;height: 30px;min-height: 30px;">
                                                    <a href="#" id="submitSurvey" class="sbtn24 sbtn24_0 submitSurvey">提&nbsp;交</a>&nbsp;&nbsp;
                                                    &nbsp;&nbsp;
                                                    <!-- <a href="/content/report.action?sid=${survey.sid}" style="color: gray;text-decoration: none;" target="_blank">查看结果</a> -->

                                                @if (pageNo > 1)
                                                {
                                                <a href="#" class="sbtn24 sbtn24_1 prevPage_a">上一页</a>
                                                <input type="hidden" name="prevPageNo" value="@(--pageNo)">
                                                }
                                                @{pageNo = pageNo + 1;}
                                                <input type="hidden" name="nextPageNo" value="@(pageNo)">
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!--答题进度 -->
                    <div id="resultProgressRoot">
                        <div class="progress-label">完成度：0%</div>
                        <div id="resultProgress" class="progressbarDiv"></div>
                    </div>
                </div>
            </div>
        </form>
    </div>0
    <div class="footer-copyright" style="color: gray;">
        @Html.Partial("_footer")
    </div>

    <div id="fixedMsg" style="position: fixed;top: 0px;width: 100%;padding: 10px;text-align: center;font-size: 18px;letter-spacing: 4px;line-height: 56px;background-color: #111;background-color: rgba(17,17,17,0.5);color: #fff;color: rgba(255,255,255,0.5);z-index: 200;display: none;"></div>

    <script type="text/javascript" src="/content/js/plugs/jquery-ui-1.10.3.custom/js/jquery-1.10.1.js"></script>
    <script type="text/javascript" src="/content/js/plugs/jquery-ui-1.10.3.custom/js/jquery-ui-1.10.3.custom.js"></script>
    <script type="text/javascript" src="/content/js/plugs/colpick-jQuery/js/colpick.js"></script>
    <link href="/content/js/plugs/uploadify-v3.1/uploadify.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="/content/js/plugs/uploadify-v3.1/jquery.uploadify-3.1.js"></script>
    <script type="text/javascript" src="/content/js/dw/uploadify.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            //分页设置 nextPage_a prevPage_a
            $(".nextPage_a").click(function () {
                var thParent = $(this).parent();
                var nextPageNo = thParent.find("input[name='nextPageNo']").val();
                $(".li_surveyQuItemBody").hide();
                $(".surveyQu_" + nextPageNo).fadeIn("slow");
                //$(window).scrollTop(10);
                $("html,body").animate({ scrollTop: 10 }, 500);
                return false;
            });
            $(".prevPage_a").click(function () {
                var thParent = $(this).parent();
                var prevPageNo = thParent.find("input[name='prevPageNo']").val();
                $(".li_surveyQuItemBody").hide();
                $(".surveyQu_" + prevPageNo).fadeIn("slow");
                $(window).scrollTop(10);
                return false;
            });

            var prevHost = $("#prevHost").val();
            //初始化弹出窗口参数


            (function InitView() {
                var surveyStyleId = $("#surveyStyleId").val();
                if (surveyStyleId != "" && surveyStyleId != "0") {
                    /** 背景样式 **/
                    var showBodyBi = "@Model.SurveyStyle.ShowBodyBi";

                    //surveyStyle.bodyBgColor
                    var bodyBgColor = "@Model.SurveyStyle.BodyBgColor";
                    var bodyBgColorObj = $("input[name='bodyBgColor']");
                    bodyBgColorObj.val(bodyBgColor);
                    var bodyBCThemeParamObj = bodyBgColorObj.parents(".theme_param");
                    bodyBCThemeParamObj.find(".color_box").css({ "background-color": bodyBgColor });
                    $("body").css({ "background-color": bodyBgColor });

                    //surveyStyle.bodyBgImage
                    var bodyBgImage = "@Model.SurveyStyle.BodyBgImage";
                    var bodyBgImageObj = $("input[name='bodyBgImage']");
                    var bodyBIThemeParamObj = bodyBgImageObj.parents(".theme_param");
                    bodyBgImageObj.val(bodyBgImage);
                    bodyBIThemeParamObj.find(".previewImage").attr("src", prevHost + bodyBgImage);
                    if (showBodyBi == 1) {
                        $("body").css({ "background-image": "url(" + prevHost + bodyBgImage + ")" });
                        $("input[name='showBodyBi']").prop("checked", true);
                    }

                    /** 表头样式 **/
                    //surveyStyle.showBodyBi
                    var showSurveyHbgi = "@Model.SurveyStyle.ShowSurveyHbgi";

                    //surveyStyle.bodyBgColor
                    var surveyHeadBgColor = "@Model.SurveyStyle.SurveyHeadBgColor";
                    var surveyHeadBgColorObj = $("input[name='surveyHeadBgColor']");
                    var surveyHBCThemeParamObj = surveyHeadBgColorObj.parents(".theme_param");
                    surveyHeadBgColorObj.val(surveyHeadBgColor);
                    surveyHBCThemeParamObj.find(".color_box").css({ "background-color": surveyHeadBgColor });
                    $("#dwSurveyHeader").css({ "background-color": surveyHeadBgColor });

                    //surveyStyle.bodyBgImage
                    var surveyHeadBgImage = "@Model.SurveyStyle.SurveyHeadBgImage";
                    var surveyHeadBgImageObj = $("input[name='surveyHeadBgImage']");
                    var surveyHBIThemeParamObj = surveyHeadBgImageObj.parents(".theme_param");
                    surveyHeadBgImageObj.val(surveyHeadBgImage);
                    surveyHBIThemeParamObj.find(".previewImage").attr("src", prevHost + surveyHeadBgImage);
                    if (showSurveyHbgi == 1) {
                        $("#dwSurveyHeader").css({ "background-image": "url(" + prevHost + surveyHeadBgImage + ")" });
                        $("input[name='showSurveyHbgi']").prop("checked", true);
                    }

                    var surveyHeadPaddingTop = "@Model.SurveyStyle.SurveyHeadPaddingTop";
                    var surveyHeadPaddingBottom = "@Model.SurveyStyle.SurveyHeadPaddingBottom";
                    $("#dwSurveyHeader").css({ "padding-top": surveyHeadPaddingTop + "px" });
                    $("#dwSurveyHeader").css({ "padding-bottom": surveyHeadPaddingBottom + "px" });

                    /** 内容中间样式 **/
                    //surveyStyle.showBodyBi
                    var showSurveyCbim = "@Model.SurveyStyle.ShowSurveyCbim";

                    //surveyStyle.bodyBgColor
                    var surveyContentBgColorMiddle = "@Model.SurveyStyle.SurveyContentBgColorMiddle";
                    var surveyContentBgColorMiddleObj = $("input[name='surveyContentBgColorMiddle']");
                    var surveyCBCMThemeParamObj = surveyContentBgColorMiddleObj.parents(".theme_param");
                    surveyContentBgColorMiddleObj.val(surveyContentBgColorMiddle);
                    surveyCBCMThemeParamObj.find(".color_box").css({ "background-color": surveyContentBgColorMiddle });;
                    $("#dwSurveyQuContentBg").css({ "background-color": surveyContentBgColorMiddle });

                    //surveyStyle.bodyBgImage
                    var surveyContentBgImageMiddle = "@Model.SurveyStyle.SurveyContentBgImageMiddle";
                    var surveyContentBgImageMiddleObj = $("input[name='surveyContentBgImageMiddle']");
                    var surveyCBIMThemeParamObj = surveyContentBgImageMiddleObj.parents(".theme_param");
                    surveyContentBgImageMiddleObj.val(surveyContentBgImageMiddle);
                    surveyCBIMThemeParamObj.find(".previewImage").attr("src", prevHost + surveyContentBgImageMiddle);
                    if (showSurveyCbim == 1) {
                        $("#dwSurveyQuContentBg").css({
                            "background-image": "url(" + prevHost + surveyContentBgImageMiddle + ")"
                        });
                        $("input[name='showSurveyCbim']").prop("checked", true);
                    }

                    /** 文本样式 **/
                    var questionTitleTextColor = "@Model.SurveyStyle.QuestionTitleTextColor";
                    var questionTitleTextColorObj = $("input[name='questionTitleTextColor']");
                    var questionTTCThemeParamObj = questionTitleTextColorObj.parents(".theme_param");
                    questionTitleTextColorObj.val(questionTitleTextColor);
                    questionTTCThemeParamObj.find(".color_box").css({ "background-color": questionTitleTextColor });
                    $(".quCoTitle").css({ "color": questionTitleTextColor });

                    var questionOptionTextColor = "@Model.SurveyStyle.QuestionOptionTextColor";
                    var questionOptionTextColorObj = $("input[name='questionOptionTextColor']");
                    var questionOTCThemeParamObj = questionOptionTextColorObj.parents(".theme_param");
                    questionOptionTextColorObj.val(questionOptionTextColor);
                    questionOTCThemeParamObj.find(".color_box").css({ "background-color": questionOptionTextColor });
                    $(".quCoOptionEdit").css({ "color": questionOptionTextColor });

                    var surveyTitleTextColor = "@Model.SurveyStyle.SurveyTitleTextColor";
                    var surveyTitleTextColorObj = $("input[name='surveyTitleTextColor']");
                    var surveyTTCThemeParamObj = surveyTitleTextColorObj.parents(".theme_param");
                    surveyTitleTextColorObj.val(surveyTitleTextColor);
                    surveyTTCThemeParamObj.find(".color_box").css({ "background-color": surveyTitleTextColor });
                    $("#dwSurveyTitle").css({ "color": surveyTitleTextColor });

                    var surveyNoteTextColor = "@Model.SurveyStyle.SurveyNoteTextColor";
                    var surveyNoteTextColorObj = $("input[name='surveyNoteTextColor']");
                    var surveyNTCThemeParamObj = surveyNoteTextColorObj.parents(".theme_param");
                    surveyNoteTextColorObj.val(surveyNoteTextColor);
                    surveyNTCThemeParamObj.find(".color_box").css({ "background-color": surveyNoteTextColor });
                    $("#dwSurveyNoteEdit").css({ "color": surveyNoteTextColor });

                    var surveyBtnBgColor = "@Model.SurveyStyle.SurveyBtnBgColor";
                    if (surveyBtnBgColor !== "") {
                        $("#dw_body_content .sbtn24").css({ "background": "none" });
                        $("#dw_body_content .sbtn24,.progressbarDiv .ui-progressbar-value")
                            .css({ "background-color": surveyBtnBgColor });
                        $(".progressbarDiv").css({ "border-color": surveyBtnBgColor });
                        $(".progress-label ").css({ "color": surveyBtnBgColor });
                        var surveyBtnBgColorObj = $("input[name='surveyBtnBgColor']");
                        surveyBtnBgColorObj.val(surveyBtnBgColor);
                        var btnBcThemeParamObj = surveyBtnBgColorObj.parents(".theme_param");
                        btnBcThemeParamObj.find(".color_box").css({ "background-color": surveyBtnBgColor });
                    }

                    //显示序号及进度条
                    var showTiNum = "@Model.SurveyStyle.ShowTiNum";
                    var showProgressbar = "@Model.SurveyStyle.ShowProgressbar";
                    if (showTiNum == 0) {
                        $(".quCoNum").hide();
                    }
                    if (showProgressbar == 0) {
                        $("#resultProgressRoot").hide();
                    }

                    //表头文本显示
                    var showSurTitle = "@Model.SurveyStyle.ShowSurTitle";
                    var showSurNote = "@Model.SurveyStyle.ShowSurNote";
                    if (showSurTitle == 0) {
                        $("#dwSurveyTitle").hide();
                    }
                    if (showSurNote == 0) {
                        $("#dwSurveyNote").hide();
                    }
                }
            })();

            function PrepareData() {
                var surveyId = $("#surveyId").val();
                postData = new Object();
                postData.DirId = surveyId;
                postData.AnswerRadio = [];
                postData.AnswerCheckbox = [];
                postData.AnswerFillblank = [];
                postData.AnswerOrder = [];
                postData.AnswerScore = [];
                postData.AnswerMultiFillblank = [];
                postData.AnswerChenRadio = [];
                postData.AnswerChenCheckbox = [];
                postData.AnswerChenScore = [];
                postData.AnswerChenFillblank = [];

                var surveyQuItemBodys = $(".li_surveyQuItemBody");
                $.each(surveyQuItemBodys, function (index, item) {
                    var quItemBody = $(item);
                    var quId = quItemBody.find(".quId").val();
                    var quType = quItemBody.find(".quType").val();

                    if (quType === "RADIO") {
                        var index = postData.AnswerRadio.length;
                        postData.AnswerRadio[index] = new Object();
                        postData.AnswerRadio[index].DirId = surveyId;
                        postData.AnswerRadio[index].QuId = quId;
                        postData.AnswerRadio[index].QuItemId = $(quItemBody.find("input[type='radio']:checked")[0]).val();

                    } else if (quType === "CHECKBOX") {
                        $.each(quItemBody.find("input[type='checkbox']:checked"), function (i, t) {
                            var index = postData.AnswerCheckbox.length;
                            postData.AnswerCheckbox[index] = new Object();
                            postData.AnswerCheckbox[index].DirId = surveyId;
                            postData.AnswerCheckbox[index].QuId = quId;
                            postData.AnswerCheckbox[index].QuItemId = $(t).val();
                        });
                    } else if (quType === "FILLBLANK") {
                        var index = postData.AnswerFillblank.length;
                        postData.AnswerFillblank[index] = new Object();
                        postData.AnswerFillblank[index].DirId = surveyId;
                        postData.AnswerFillblank[index].QuId = quId;
                        postData.AnswerFillblank[index].Answers = quItemBody.find(".fillblankInput").val();

                    } else if (quType === "ORDERQU") {
                        $.each(quItemBody.find(".quOrderByTableTr"), function (i, t) {
                            if ($(this).find(".optionId").val() && $(this).find(".quOrderItemHidInput").val()) {
                                var index = postData.AnswerOrder.length;
                                postData.AnswerOrder[index] = new Object();
                                postData.AnswerOrder[index].DirId = surveyId;
                                postData.AnswerOrder[index].QuId = quId;
                                postData.AnswerOrder[index].QuRowId = $(this).find(".optionId").val();
                                postData.AnswerOrder[index].OrderyNum = $(this).find(".quOrderItemHidInput").val();
                            }
                        });
                    } else if (quType === "SCORE") {
                        var quScoreOptionTrs = quItemBody.find(".quScoreOptionTr");
                        $.each(quScoreOptionTrs, function () {
                            var index = postData.AnswerScore.length;
                            postData.AnswerScore[index] = new Object();
                            postData.AnswerScore[index].DirId = surveyId;
                            postData.AnswerScore[index].QuId = quId;
                            postData.AnswerScore[index].QuRowId = $(this).find(".dwScoreOptionId").val();
                            postData.AnswerScore[index].AnswserScore = $(this).find(".scoreNumInput").val();
                        });

                    } else if (quType === "MULTIFILLBLANK") {
                        var quScoreOptionTrs = quItemBody.find(".mFillblankTableTr");
                        $.each(quScoreOptionTrs, function () {
                            var index = postData.AnswerMultiFillblank.length;
                            postData.AnswerMultiFillblank[index] = new Object();
                            postData.AnswerMultiFillblank[index].DirId = surveyId;
                            postData.AnswerMultiFillblank[index].QuId = quId;
                            postData.AnswerMultiFillblank[index].QuItemId = $(this).find(".dwMFillblankOptionId").val();
                            postData.AnswerMultiFillblank[index].Answers = $(this).find(".dwMFillblankInput").val();
                        });

                    } else if (quType === "CHENRADIO") {
                        var quScoreOptionTrs = quItemBody.find(".dwQuCoChenRowTr");
                        $.each(quScoreOptionTrs, function () {
                            var index = postData.AnswerChenRadio.length;
                            postData.AnswerChenRadio[index] = new Object();
                            postData.AnswerChenRadio[index].DirId = surveyId;
                            postData.AnswerChenRadio[index].QuId = quId;
                            postData.AnswerChenRadio[index].QuRowId = $(this).find(".quchenrowid").val();
                            postData.AnswerChenRadio[index].QuColId = $(this).find("input[type='radio']:checked").val();

                        });
                    } else if (quType === "CHENCHECKBOX") {
                        var quScoreOptionTrs = quItemBody.find(".dwQuOptionItemContent");
                        $.each(quScoreOptionTrs, function () {
                            if ($(this).find("input[type='checkbox']:checked").length > 0) {
                                var index = postData.AnswerChenCheckbox.length;
                                postData.AnswerChenCheckbox[index] = new Object();
                                postData.AnswerChenCheckbox[index].DirId = surveyId;
                                postData.AnswerChenCheckbox[index].QuId = quId;
                                postData.AnswerChenCheckbox[index].QuRowId = $(this).find(".quchenrowid").val();
                                postData.AnswerChenCheckbox[index].QuColId = $(this).find("input[type='checkbox']:checked").val();
                            }
                        });
                    } else if (quType === "CHENSCORE") {
                        var quChenScores = quItemBody.find(".dwQuScoreOptionItemContent");
                        $.each(quChenScores, function () {
                            var index = postData.AnswerChenScore.length;
                            postData.AnswerChenScore[index] = new Object();
                            postData.AnswerChenScore[index].DirId = surveyId;
                            postData.AnswerChenScore[index].QuId = quId;
                            postData.AnswerChenScore[index].QuRowId = $(this).find(".quchenrowid").val();
                            postData.AnswerChenScore[index].QuColId = $(this).find(".quchencolid").val();
                            postData.AnswerChenScore[index].AnswserScore = $(this).find(".quChenScoreSelect").val();
                        });
                    }
                    else if (quType === "CHENFBK") {
                        var dwCMFBKs = quItemBody.find(".dwQuChenFbkOptionItemContent");
                        $.each(dwCMFBKs, function () {
                            var index = postData.AnswerChenFillblank.length;
                            postData.AnswerChenFillblank[index] = new Object();
                            postData.AnswerChenFillblank[index].DirId = surveyId;
                            postData.AnswerChenFillblank[index].QuId = quId;
                            postData.AnswerChenFillblank[index].QuRowId = $(this).find(".quchenrowid").val();
                            postData.AnswerChenFillblank[index].QuColId = $(this).find(".quchencolid").val();
                            postData.AnswerChenFillblank[index].AnswerValue = $(this).find(".dwChenMFillblankInput").val();
                        });
                    }
                    else if (quType === "submitSurveyBtn" || quType === "PARAGRAPH" || quType === "PAGETAG") {
                        return true;
                    }
                });
            }

            var postData = new Object();
            $(".submitSurvey").click(function () {
                $(this).prop("disabled", true);
                if (validateForms()) {
                    PrepareData();
                    console.log(postData);
                    $.post('@Url.Action("Mobile", "Show")', { "model": postData }, function (data) {
                        location.href = '@Url.Action("Result", "Show")?SurveyName=@Utils.NoHTML(Utils.HtmlDecode(Model.SurveyName))&AnswerId=' + data;
                    });
                }
                $(this).prop("disabled", false);
                return false;
            });

            //评分题
            $(".scoreNumTable tr td").click(function () {
                //scoreNumInput
                var quScoreOptionTr = $(this).parents(".quScoreOptionTr");
                var tdText = $(this).text();
                quScoreOptionTr.find(".scoreNumTable tr td").css({ "background": "white" });
                quScoreOptionTr.find(".scoreNumText").html($(this).text() + "&nbsp;分");

                $(this).prevAll().css({ "background": "" });
                $(this).css({ "background": "" });

                quScoreOptionTr.find(".scoreNumInput").val(tdText);
                quScoreOptionTr.find(".scoreNumText").html(tdText + "&nbsp;分");

                runlogic($(this));
                answerProgressbar($(this));
                validateCheck($(this).parents(".li_surveyQuItemBody"), false);
            });

            $(".scoreNumTable tr td").hover(function () {
                var quScoreOptionTr = $(this).parents(".quScoreOptionTr");
                var scoreNumInput = quScoreOptionTr.find(".scoreNumInput").val();
                if (scoreNumInput == "") {
                    $(this).css({ "background": "" });
                    $(this).prevAll().css({ "background": "" });
                    quScoreOptionTr.find(".scoreNumText").html($(this).text() + "&nbsp;分");
                }
            }, function () {
                var quScoreOptionTr = $(this).parents(".quScoreOptionTr");
                var scoreNumInput = quScoreOptionTr.find(".scoreNumInput").val();
                if (scoreNumInput == "") {
                    $(this).css({ "background": "white" });
                    $(this).siblings().css({ "background": "white" });
                    quScoreOptionTr.find(".scoreNumText").html("分");
                }
            });

            //排序题
            //quOrderByCoItem
            bindQuOrderBySorts();
            function bindQuOrderBySorts() {
                var quOrderByCoItems = $(".quOrderByCoItem");
                $.each(quOrderByCoItems, function () {
                    $(this).find(".quOrderByLeftUl li").sortable({
                        zIndex: 1000,
                        scroll: false,
                        opacity: 0.8,
                        placeholderType: false,
                        connectWith: $(this).find(".quOrderByTable td"),
                        helper: function (event, ui) {
                            return "<label class='quOrderItemLabel'>" + $(this).text() + "</label>";
                        },
                        over: function (event, ui) {

                        },
                        start: function (event, ui) {

                        },
                        drag: function (event, ui) {

                        },
                        stop: function (event, ui) {
                            $(".quOrderByTable td").css({ "background": "" });
                            //ui.item.html("<label class='quOrderItemLabel'>"+ui.item.text()+"</label>");
                            answerProgressbar($(this));
                            validateCheck($(this).parents(".li_surveyQuItemBody"), false);
                        }
                    });
                    var sortObjTempHtml = null;
                    $(this).find(".quOrderByTable td").sortable({
                        //revert: true
                        //dropOnEmpty:false,
                        zIndex: 1000,
                        scroll: false,
                        opacity: 0.9,
                        placeholderType: true,
                        placeholder: "qu-order-highlight",
                        connectWith: $(this).find(".quOrderByTable td"),
                        over: function (event, ui) {
                            $(".quOrderByTable td").css({ "background": "" });
                            $(this).css({ "background": "#FAEDC0" });
                            var quOrderItemLabel = $(this).find("label.quOrderItemLabel");
                            sortObjTempHtml = "";
                            if (quOrderItemLabel[0]) {
                                sortObjTempHtml = quOrderItemLabel.html();
                            }
                            /*sortObjTempHtml="";
                             if(lastLabelHtml!=""){
                                sortObjTempHtml="<label class='quOrderItemLabel'>"+$(this).find("label:last-child").html()+"</label>";
                            } */
                            //console.debug($(ui.helper).css("zIndex")+$(ui.helper).css("position"));
                        },
                        receive: function (event, ui) {//当一个已连接的sortable对象接收到另一个sortable对象的元素后触发此事件。
                            //判断如果是从右边新移入的，但当前td中已经有了，就交换到右边去

                            var uiSenderClass = ui.sender.attr("class");
                            ui.sender.empty();
                            /* if(uiSenderClass.indexOf("quCoItemUlLi")<0){
                                ui.sender.append(sortObjTempHtml);
                            } */
                            if (uiSenderClass.indexOf("quCoItemUlLi") < 0) {
                                if (sortObjTempHtml != "") {
                                    ui.sender.append("<label class='quOrderItemLabel'>" + sortObjTempHtml + "</label>");
                                }
                            } else {
                                if (sortObjTempHtml != "") {
                                    ui.sender.append("<label class='editAble quCoOptionEdit'>" + sortObjTempHtml + "</label>");
                                }
                            }

                            $(this).empty();
                            ui.item.clone().appendTo($(this));
                            var quCoOptionEdit = $(this).find(".quCoOptionEdit");
                            if (quCoOptionEdit[0]) {
                                quCoOptionEdit.removeClass();
                                quCoOptionEdit.addClass("quOrderItemLabel");
                            }
                            $(".quOrderByTable td").css({ "background": "" });
                            //更新排序ID  quCoItem quOrderByTableTr
                            //bindQuOrderBySorts();
                            var quOrderyByTrs = $(".quCoItem .quOrderByTableTr");
                            $.each(quOrderyByTrs, function (i) {
                                var quOrderItemHidInput = $(this).find(".quOrderItemHidInput");
                                quOrderItemHidInput.val(i + 1);
                            });
                        },
                        start: function (event, ui) {
                            $(".quOrderByTable td").css({ "background": "" });
                            $(this).css({ "background": "#FAEDC0" });
                        },
                        drag: function (event, ui) {
                            $(".quOrderByTable td").css({ "background": "" });
                            $(this).css({ "background": "#FAEDC0" });
                        },
                        stop: function (event, ui) {
                            $(".quOrderByTable td").css({ "background": "" });
                        },
                        out: function (event, ui) {
                            //$(".quOrderByTable td").css({"background":""});
                        },
                        activate: function (event, ui) {
                            //$(".quOrderByTable td").css({"background":""});
                            //$(this).css({"background":"#FAEDC0"});
                        }
                    });
                });
            }

            /**初始化表单骓证配置**/
            function validateForms() {
                var result = true;
                var surveyQuItemBodys = $(".li_surveyQuItemBody");
                var firstError = null;
                $.each(surveyQuItemBodys, function () {
                    var quItemBody = $(this);
                    if (!validateCheck(quItemBody, true)) {
                        //定位到这题
                        if (firstError == null) {
                            firstError = quItemBody;
                        }
                        result = false;
                    }
                    // || quType==="CHENRADIO" || quType==="CHENCHECKBOX" || quType==="CHENSCORE" || quType==="CHENFBK"
                });
                if (firstError != null) {
                    $(window).scrollTop(firstError.offset().top);
                }
                //
                if ($("#jcaptchaImgBody").is(":visible")) {
                    var jcaptchaInput = $("input[name='jcaptchaInput']").val();
                    if (jcaptchaInput === "") {
                        $("#jcaptchaImgBody .errorItem").show();
                        result = false;
                    } else {
                        $("#jcaptchaImgBody .errorItem").hide();
                    }
                }
                return result;
            }


            function validateCheck(quItemBody, isSubForm) {
                if (quItemBody.is(":visible")) {

                    var quId = quItemBody.find(".quId").val();
                    var quType = quItemBody.find(".quType").val();
                    var isRequired = quItemBody.find(".isRequired").val();

                    var validateStatus = false;

                    if (isRequired === "0") {
                        validateStatus = true;
                        return true;
                    }

                    if (quType === "RADIO") {
                        validateStatus = quItemBody.find("input[type='radio']:checked")[0];
                    } else if (quType === "CHECKBOX") {
                        validateStatus = quItemBody.find("input[type='checkbox']:checked")[0];
                    } else if (quType === "FILLBLANK") {
                        validateStatus = quItemBody.find(".fillblankInput").val() != "";
                    } else if (quType === "ORDERQU") {
                        //quItemBody.find(".quOrderByLeftUl label");
                        validateStatus = !quItemBody.find(".quOrderByLeftUl label")[0];
                    } else if (quType === "SCORE") {

                        validateStatus = true;
                        var quScoreOptionTrs = quItemBody.find(".quScoreOptionTr");
                        $.each(quScoreOptionTrs, function () {
                            var scoreNumInput = $(this).find(".scoreNumInput");
                            if (scoreNumInput.val() === "") {
                                validateStatus = false;
                                return false;
                            }
                        });

                    } else if (quType === "MULTIFILLBLANK") {

                        validateStatus = true;
                        var quScoreOptionTrs = quItemBody.find(".mFillblankTableTr");
                        $.each(quScoreOptionTrs, function () {
                            var scoreNumInput = $(this).find(".dwMFillblankInput");
                            if (scoreNumInput.val() === "") {
                                validateStatus = false;
                                return false;
                            }
                        });

                    } else if (quType === "CHENRADIO") {
                        validateStatus = true;
                        var quScoreOptionTrs = quItemBody.find(".dwQuCoChenRowTr");
                        $.each(quScoreOptionTrs, function () {
                            var tempInputs = $(this).find("input[type='radio']:checked");
                            if (!tempInputs[0]) {
                                validateStatus = false;
                                return false;
                            }
                        });
                    } else if (quType === "CHENCHECKBOX") {
                        validateStatus = true;
                        var quScoreOptionTrs = quItemBody.find(".dwQuCoChenRowTr");
                        $.each(quScoreOptionTrs, function () {
                            var tempInputs = $(this).find("input[type='checkbox']:checked");
                            if (!tempInputs[0]) {
                                validateStatus = false;
                                return false;
                            }
                        });
                    } else if (quType === "CHENSCORE") {
                        var quChenScores = quItemBody.find(".quChenScoreSelect");
                        validateStatus = true;
                        $.each(quChenScores, function () {
                            var tempInputs = $(this);
                            if (tempInputs.val() === "0") {
                                validateStatus = false;
                                return false;
                            }
                        });

                    } else if (quType === "CHENFBK") {
                        var dwCMFBKs = quItemBody.find(".dwChenMFillblankInput");
                        validateStatus = true;
                        $.each(dwCMFBKs, function () {
                            var tempInputs = $(this);
                            if (tempInputs.val() === "") {
                                validateStatus = false;
                                return false;
                            }
                        });
                    } else if (quType === "submitSurveyBtn" || quType === "PARAGRAPH" || quType === "PAGETAG") {
                        return true;
                    }

                } else {
                    validateStatus = true;
                }

                if (validateStatus) {
                    quItemBody.find(".errorItem").remove();
                } else {
                    if (isSubForm && !quItemBody.find(".errorItem")[0]) {
                        var errorHtml = "<div class=\"errorItem\"><label for=\"\" class=\"error\">请检查题目答案，为必答项！</label></div>";
                        quItemBody.find(".quCoItem").append(errorHtml);
                    }
                }
                return validateStatus;
            }

            /******************************处理题目逻辑设置 **************************************/
            //处理题目逻辑设置


            /** 答题触发事件 **/

            //初始化 处理默认逻辑跳转为显示，则先隐藏元素
            var quLogics = $("#dwSurveyQuContent .quLogicItem");
            $.each(quLogics, function () {
                var loginItem = $(this);
                var cgQuItemId = loginItem.find(".cgQuItemId").val();
                var skQuId = loginItem.find(".skQuId").val();
                var logicId = loginItem.find(".logicId").val();
                var logicType = loginItem.find(".logicType").val();

                if (logicType === "2") {
                    //逻辑类型为“显示”2  则初始化为隐藏
                    var hidQuItemBody = $(".quId[value='" + skQuId + "']").parents(".li_surveyQuItemBody");
                    hidQuItemBody.hide();
                    hidQuItemBody.addClass("hidFor" + logicId);
                    hidQuItemBody.find(".answerTag").attr("disabled", true);
                }
            });

            /** 单选与多选条件触发 自定义单选多选效果 操作结束后得调用逻辑判断 **/
            $(".dwQuOptionItemContent").click(function () {
                var thObj = $(this);
                var quItemBody = thObj.parents(".li_surveyQuItemBody");
                var quType = quItemBody.find(".quType").val();
                var dwQuInputLabel = thObj.find(".dwQuInputLabel");
                if ("RADIO" === quType) {
                    //单选题
                    quItemBody.find(".dwQuInputLabel").removeClass("checked");
                    quItemBody.find("input[type='radio']").prop("checked", false);
                    dwQuInputLabel.addClass("checked");
                    thObj.find("input[type='radio']").prop("checked", true);

                    runlogic(thObj.find("input[type='radio']"));
                } else if ("CHECKBOX" === quType) {
                    //多选题
                    //quItemBody.find(".dwQuInputLabel").removeClass("checked");
                    var quInputLabelClass = dwQuInputLabel.attr("class");
                    if (quInputLabelClass.indexOf("checked") > 0) {
                        dwQuInputLabel.removeClass("checked");
                        thObj.find("input[type='checkbox']").prop("checked", false);
                    } else {
                        dwQuInputLabel.addClass("checked");
                        thObj.find("input[type='checkbox']").prop("checked", true);
                    }

                    runlogic(thObj.find("input[type='checkbox']"));
                } else if ("CHENRADIO" === quType) {
                    //矩陈单选
                    var chenRow = thObj.parents("tr");
                    chenRow.find(".dwQuInputLabel").removeClass("checked");
                    chenRow.find("input[type='radio']").prop("checked", false);
                    dwQuInputLabel.addClass("checked");
                    thObj.find("input[type='radio']").prop("checked", true);

                    runlogic(thObj.find("input[type='radio']"));
                } else if ("CHENCHECKBOX" === quType) {
                    //矩陈多选
                    var quInputLabelClass = dwQuInputLabel.attr("class");
                    if (quInputLabelClass.indexOf("checked") > 0) {
                        dwQuInputLabel.removeClass("checked");
                        thObj.find("input[type='checkbox']").prop("checked", false);
                    } else {
                        dwQuInputLabel.addClass("checked");
                        thObj.find("input[type='checkbox']").prop("checked", true);
                    }

                    runlogic(thObj.find("input[type='checkbox']"));

                }

                answerProgressbar(thObj);
                validateCheck(quItemBody, false);
            });

            //填空题
            $(".fillblankInput,.dwMFillblankInput,.dwChenMFillblankInput").blur(function () {
                //$(this).css("borderColor","#D6D6FF");
                var thVal = $(this).val();
                runlogic($(this));
                answerProgressbar($(this));
                validateCheck($(this).parents(".li_surveyQuItemBody"), false);
            });

            $(".quChenScoreSelect").change(function () {
                answerProgressbar($(this));
                validateCheck($(this).parents(".li_surveyQuItemBody"), false);
            });

            //只要触发事件


            function runlogic(thFormElementObj) {
                //thFormElementObj 当前关联的form表单元素
                var quItemBody = thFormElementObj.parents(".li_surveyQuItemBody");

                var quLogicItems = quItemBody.find(".quLogicItem");

                if (quLogicItems[0]) {

                    var quInputCase = quItemBody.find(".quInputCase");
                    var quId = quInputCase.find(".quId").val();
                    var quType = quInputCase.find(".quType").val();

                    //$("input[name='qu_"+quType+"_"+quId+"']").change(function(){});

                    if (quType === "RADIO" || quType === "CHECKBOX" || quType === "SCORE" || quType === "MULTIFILLBLANK" || quType === "CHENRADIO" || quType === "CHENCHECKBOX" || quType === "CHENSCORE" || quType === "CHENFBK") {


                        //判断是否选中
                        var quLgoicItem = null;
                        //var thVal=thFormElementObj.val();

                        //遍历每个逻辑设置
                        var quOptionItems = null;
                        if (quType === "RADIO" || quType === "CHECKBOX") {
                            quOptionItems = quItemBody.find(".dwQuOptionItemContent");
                            //thVal=thFormElementObj.val();
                        } else if (quType === "SCORE") {
                            quOptionItems = quItemBody.find(".quScoreOptionTr");
                            //thVal=thFormElementObj.text();
                        } else if (quType === "MULTIFILLBLANK") {
                            quOptionItems = quItemBody.find(".mFillblankTableTr");
                        } else if (quType === "CHENRADIO" || quType === "CHENCHECKBOX") {
                            quOptionItems = quItemBody.find(".dwQuOptionItemContent");
                        } else if (quType === "CHENFBK") {
                            quOptionItems = quItemBody.find(".dwQuChenFbkOptionItemContent");
                        }

                        $.each(quLogicItems, function () {
                            var loginItem = $(this);
                            var cgQuItemId = loginItem.find(".cgQuItemId").val();
                            var skQuId = loginItem.find(".skQuId").val();
                            var logicId = loginItem.find(".logicId").val();
                            var logicType = loginItem.find(".logicType").val();

                            var geLe = null;
                            var scoreNum = null;
                            if (quType === "SCORE") {
                                geLe = loginItem.find(".geLe").val();
                                scoreNum = loginItem.find(".scoreNum").val();
                            }

                            //过滤优先级
                            var isbreak = false;
                            $.each(quOptionItems, function () {
                                var quCoItem = $(this);

                                var quInput = null;
                                var logicStatus = false;
                                var curQuItemId = null;
                                if (quType === "RADIO") {
                                    quInput = quCoItem.find("input[type='radio']");
                                    logicStatus = quInput.prop("checked");
                                    curQuItemId = quInput.val();
                                } else if (quType === "CHECKBOX") {
                                    quInput = quCoItem.find("input[type='checkbox']");
                                    logicStatus = quInput.prop("checked");
                                    curQuItemId = quInput.val();
                                } else if (quType === "SCORE") {
                                    quInput = quCoItem.find(".dwScoreOptionId");
                                    var curScore = quCoItem.find(".scoreNumInput").val();
                                    if (curScore != "") {
                                        logicStatus = (geLe === "le" && curScore <= scoreNum) || (geLe === "ge" && curScore >= scoreNum);
                                    }
                                    curQuItemId = quInput.val();
                                } else if (quType === "MULTIFILLBLANK") {
                                    quInput = quCoItem.find(".dwMFillblankOptionId");
                                    logicStatus = quCoItem.find(".dwMFillblankInput").val() != "";
                                    curQuItemId = quInput.val();
                                } else if (quType === "CHENRADIO") {
                                    quInput = quCoItem.find("input[type='radio']");
                                    logicStatus = quInput.prop("checked");
                                    curQuItemId = quCoItem.find(".dwChenInputTemp").val();
                                } else if (quType === "CHENCHECKBOX") {
                                    quInput = quCoItem.find("input[type='checkbox']");
                                    logicStatus = quInput.prop("checked");
                                    curQuItemId = quCoItem.find(".dwChenInputTemp").val();
                                } else if (quType === "CHENFBK") {
                                    quInput = quCoItem.find(".dwChenMFillblankInput");
                                    logicStatus = quInput.val() != "";
                                    curQuItemId = quCoItem.find(".dwChenInputTemp").val();
                                }

                                if (curQuItemId === cgQuItemId) {

                                    if (logicType === "1") {
                                        //跳转
                                        if (logicStatus) {
                                            //逻辑选项被选中状态，激活状态
                                            skQuestion(quItemBody.next(), skQuId, logicId, function () {
                                                //重新编题号

                                            });
                                            if (skQuId === "1" || skQuId === "2") {
                                                isbreak = true;
                                            }
                                        } else {
                                            /*
                                            //逻辑选项未被选中状态，未激活
                                            //$(".hidFor"+loginId).slideDown("slow");
                                            $(".hidFor"+loginId).show();
                                            //$(".hidFor"+loginId).fadeIn();
                                            $(".hidFor"+loginId).removeClass("hidFor"+loginId);
                                            //回答标记与逻辑设置没有关系
                                            $(".hidFor"+loginId).find(".answerTag").attr("disabled",false);
                                            */
                                            var hidQuItemBodys = $(".hidFor" + logicId);
                                            $(".hidFor" + logicId).removeClass("hidFor" + logicId);
                                            $.each(hidQuItemBodys, function () {
                                                var thQuItemBodyClass = $(this).attr("class");
                                                if (thQuItemBodyClass.indexOf("hidFor") < 0) {
                                                    $(this).show();
                                                    //$(".hidFor"+loginId).fadeIn();
                                                    //回答标记与逻辑设置没有关系
                                                    $(this).find(".answerTag").attr("disabled", false);
                                                }
                                            });
                                        }
                                    } else {
                                        //逻辑类型为“显示” quType=2
                                        if (logicStatus) {
                                            //逻辑选项被选中状态，激活状态  显示题

                                            var hidQuItemBodys = $(".hidFor" + logicId);
                                            $(".hidFor" + logicId).removeClass("hidFor" + logicId);
                                            $.each(hidQuItemBodys, function () {
                                                var thQuItemBodyClass = $(this).attr("class");
                                                if (thQuItemBodyClass.indexOf("hidFor") < 0) {
                                                    $(this).show();
                                                    $(this).find(".answerTag").attr("disabled", false);
                                                }
                                            });

                                        } else {
                                            /*  隐藏题
                                            */
                                            var hidQuItemBody = $(".quId[value='" + skQuId + "']").parents(".li_surveyQuItemBody");
                                            hidQuItemBody.hide();
                                            hidQuItemBody.addClass("hidFor" + logicId);
                                            hidQuItemBody.find(".answerTag").attr("disabled", true);

                                        }
                                    }

                                    return false;
                                }
                            });

                            if (isbreak) {
                                return false;
                            }

                        });

                    } else if (quType === "FILLBLANK") {


                        //遍历每个逻辑设置
                        var quOptionItems = quItemBody.find(".dwQuOptionItemContent");
                        var thVal = thFormElementObj.val();

                        $.each(quLogicItems, function () {
                            var loginItem = $(this);
                            var cgQuItemId = loginItem.find(".cgQuItemId").val();
                            var skQuId = loginItem.find(".skQuId").val();
                            var logicId = loginItem.find(".logicId").val();
                            var logicType = loginItem.find(".logicType").val();
                            if (logicType === "1") {
                                //跳转
                                if (thVal != "") {
                                    //逻辑选项被选中状态，激活状态
                                    skQuestion(quItemBody.next(), skQuId, logicId, function () {
                                        //重新编题号

                                    });
                                    if (skQuId === "1" || skQuId === "2") {
                                        isbreak = true;
                                    }
                                } else {
                                    //逻辑选项未被选中状态，未激活
                                    //$(".hidFor"+loginId).slideDown("slow");

                                    var hidQuItemBodys = $(".hidFor" + logicId);
                                    $(".hidFor" + logicId).removeClass("hidFor" + logicId);

                                    $.each(hidQuItemBodys, function () {
                                        var thQuItemBodyClass = $(this).attr("class");
                                        if (thQuItemBodyClass.indexOf("hidFor") < 0) {
                                            $(this).show();
                                            //$(".hidFor"+loginId).fadeIn();
                                            //回答标记与逻辑设置没有关系
                                            $(this).find(".answerTag").attr("disabled", false);
                                        }
                                    });
                                }
                            } else {
                                //显示
                                //逻辑类型为“显示” quType=1
                                if (thVal != "") {
                                    //逻辑选项被选中状态，激活状态  显示题
                                    var hidQuItemBodys = $(".hidFor" + logicId);
                                    $(".hidFor" + logicId).removeClass("hidFor" + logicId);
                                    $.each(hidQuItemBodys, function () {
                                        var thQuItemBodyClass = $(this).attr("class");
                                        if (thQuItemBodyClass.indexOf("hidFor") < 0) {
                                            $(this).show();
                                            $(this).find(".answerTag").attr("disabled", false);
                                        }
                                    });

                                } else {
                                    /*  隐藏题
                                    */
                                    var hidQuItemBody = $(".quId[value='" + skQuId + "']").parents(".li_surveyQuItemBody");
                                    hidQuItemBody.hide();
                                    hidQuItemBody.addClass("hidFor" + logicId);
                                    hidQuItemBody.find(".answerTag").attr("disabled", true);
                                }
                            }

                        });

                    }
                }


            }



            function skQuestion(nextQuItemBody, skQuId, logicId, callback) {

                if (nextQuItemBody[0]) {
                    //submitSurveyBtn
                    var nextQuType = nextQuItemBody.find(".quType").val();
                    var nextQuId = nextQuItemBody.find(".quId").val();
                    var nextAnswerTag = nextQuItemBody.find(".answerTag");

                    //var quType=quItemBody.find(".quType").val();
                    //var quId=quItemBody.find(".quId").val();

                    //判断跳转类型
                    if (skQuId == null) {
                        //对于逻辑选项未被选中的情况

                    } else if (nextQuItemBody.is(":hidden")) {
                        skQuestion(nextQuItemBody.next(), skQuId, logicId, function () {

                        });
                    } else if (nextQuType != "submitSurveyBtn" && nextQuType != "PAGETAG" && (skQuId === "1" || skQuId === "2" || nextQuId != skQuId)) {
                        //对于逻辑项是被选定的情况下
                        nextAnswerTag.attr("disabled", true);
                        //nextQuItemBody.slideUp("slow");
                        nextQuItemBody.hide();
                        //nextQuItemBody.fadeOut();
                        nextQuItemBody.addClass("hidFor" + logicId);

                        skQuestion(nextQuItemBody.next(), skQuId, logicId, function () {

                        });
                    }
                } else {
                    callback();
                }
            }

            resetQuNum()
            function resetQuNum() {
                var quCoNums = $(".quCoNum");
                $.each(quCoNums, function (i, item) {
                    $(this).html((i + 1) + "、");
                });

            }

            /**********************处理答题进度条************************/
            //$("#resultProgress").progressbar({value: bfbFloat});
            function answerProgressbar(thObj) {
                var quItemBody = thObj.parents(".li_surveyQuItemBody ");
                var quType = quItemBody.find(".quType").val();

                if (quType === "RADIO") {
                    //quItemBody.find(".answerTag").val(1);
                    var checks = quItemBody.find("input[type='radio']:checked");
                    if (checks[0]) {
                        quItemBody.find(".answerTag").val(1);
                    } else {
                        quItemBody.find(".answerTag").val(0);
                    }
                } else if (quType == "CHECKBOX") {
                    var checks = quItemBody.find("input[type='checkbox']:checked");
                    if (checks[0]) {
                        quItemBody.find(".answerTag").val(1);
                    } else {
                        quItemBody.find(".answerTag").val(0);
                    }
                } else if (quType === "FILLBLANK") {
                    var thVal = thObj.val();
                    if (thVal != "") {
                        quItemBody.find(".answerTag").val(1);
                    } else {
                        quItemBody.find(".answerTag").val(0);
                    }
                } else if (quType === "ORDERQU") {
                    //quOrderByLeftUl
                    var orderByLabels = quItemBody.find(".quOrderByLeftUl label");
                    if (!orderByLabels[0]) {
                        quItemBody.find(".answerTag").val(1);
                    } else {
                        quItemBody.find(".answerTag").val(0);
                    }
                } else if (quType === "SCORE") {
                    //<input type="hidden" class="answerTag" value="0" >
                    var quScoreOptionTr = thObj.parents(".quScoreOptionTr");
                    var scoreNumInput = quScoreOptionTr.find(".scoreNumInput");
                    if (scoreNumInput.val() != "") {
                        quScoreOptionTr.find(".answerTag").val(1);
                    } else {
                        quScoreOptionTr.find(".answerTag").val(0);
                    }
                } else if (quType === "MULTIFILLBLANK") {
                    var mFillblankTableTr = thObj.parents(".mFillblankTableTr");
                    if (thObj.val() != "") {
                        mFillblankTableTr.find(".answerTag").val(1);
                    } else {
                        mFillblankTableTr.find(".answerTag").val(0);
                    }
                } else if (quType === "CHENRADIO") {
                    // || || quType==="CHENFBK"
                    var dwQuCoChenRowTr = thObj.parents(".dwQuCoChenRowTr");
                    dwQuCoChenRowTr.find(".answerTag").val(1);
                } else if (quType === "CHENCHECKBOX") {
                    var dwQuCoChenRowTr = thObj.parents(".dwQuCoChenRowTr");
                    var checks = dwQuCoChenRowTr.find("input[type='checkbox']:checked");
                    if (checks[0]) {
                        dwQuCoChenRowTr.find(".answerTag").val(1);
                    } else {
                        dwQuCoChenRowTr.find(".answerTag").val(0);
                    }
                } else if (quType === "CHENSCORE") {
                    var dwQuScoreOptionItemContent = thObj.parents(".dwQuScoreOptionItemContent");
                    if (thObj.val() != "0") {
                        dwQuScoreOptionItemContent.find(".answerTag").val(1);
                    } else {
                        dwQuScoreOptionItemContent.find(".answerTag").val(0);
                    }
                } else if (quType === "CHENFBK") {
                    var dwQuChenFbkOptionItemContent = thObj.parents(".dwQuChenFbkOptionItemContent");
                    if (thObj.val() != "") {
                        dwQuChenFbkOptionItemContent.find(".answerTag").val(1);
                    } else {
                        dwQuChenFbkOptionItemContent.find(".answerTag").val(0);
                    }
                }

                var totalQuSize = $(".answerTag:enabled").size();
                var answerTag1 = $(".answerTag[value='1']:enabled");
                var answerQuSize = 0;
                if (answerTag1[0]) {
                    answerQuSize = answerTag1.size();
                }
                var newValue = parseInt(answerQuSize / totalQuSize * 100);
                $("#resultProgressRoot .progress-label").text("完成度：" + newValue + "%");
                $("#resultProgress").progressbar("option", "value", newValue);
            }

            $("#mobileTdId").click(function () {
                $(this).next().slideToggle();
                return false;
            });

        });
    </script>
    <script type="text/javascript">
        var bfbFloat = 0;
        $("#resultProgress").progressbar({ value: bfbFloat, orientation: "vertical" });

        function refreshAutoCode(codeImgId) {
            var ctx = $("#ctx").val();
            $("#" + codeImgId).attr("src", ctx + "/jcaptcha.action");
        }

        @*//判则判断
        var url = "/content/response!ajaxCheckSurvey.action";
        var data = "surveyId=@Model.Id";
        $.ajax({
            url: url,
            data: data,
            type: "post",
            success: function (msg) {
                var json = eval("(" + msg + ")");
                if (json.isCheckCode === "3") {
                    $("#jcaptchaImgBody").show();
                }

                if (json.surveyStatus != "0") {
                    $("#fixedMsg").show();
                    $("#fixedMsg").html("您已经回答过此问卷！");
                    $("#submitSurvey").remove();
                    $("form").attr("action", "#");
                }
            }
        });*@

        var errorcode = "${param['errorcode']}";
        if (errorcode == "3") {
            var errorHtml = "<div class=\"errorItem\" style=\"padding-left:30px;\" ><label for=\"\" class=\"error\">验证码不正确，请重新回答！</label></div>";
            $("#dwSurveyHeader").append(errorHtml);
        }

    </script>
    @MiniProfiler.RenderIncludes()
    <div id="webSiteFixedRight" class="websiteFixed" style="position: fixed;right: 0px;top: 20px;z-index: 9999;">
        <a id="mobileTdId" href="@Url.Action("Mobile","Show",new { surveyId = Model.Id })" style="background: #1C658B;width: 15px;background: #8CBCD1;display: block;padding: 5px;padding-top: 10px;padding-bottom:10px;font-weight: bold;color: white;cursor: pointer;float: right;vertical-align: middle;text-decoration: none;font-size: 12px;">手机地址</a>
        <img alt="" src="" height="130" style="padding: 10px;background: white;display: none;" />
    </div>
</body>
</html>
